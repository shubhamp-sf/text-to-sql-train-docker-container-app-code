name:                 concurrent-extra
version:              0.7.0.12
visibility:           public
id:
    concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050

key:
    concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050

license:              BSD-3-Clause
copyright:            (c) 2010-2012 Bas van Dijk & Roel van Dijk
maintainer:
    Bas van Dijk <v.dijk.bas@gmail.com>
    Roel van Dijk <vandijk.roel@gmail.com>

author:
    Bas van Dijk <v.dijk.bas@gmail.com>
    Roel van Dijk <vandijk.roel@gmail.com>

stability:            experimental
homepage:             https://github.com/basvandijk/concurrent-extra
synopsis:             Extra concurrency primitives
description:
    The @concurrent-extra@ package offers among other things the
    following selection of synchronisation primitives:

    * @Broadcast@: Wake multiple threads by broadcasting a value.

    * @Event@: Wake multiple threads by signalling an event.

    * @Lock@: Enforce exclusive access to a resource. Also known as a
    binary semaphore or mutex. The package additionally provides an
    alternative that works in the @STM@ monad.

    * @RLock@: A lock which can be acquired multiple times by the same
    thread. Also known as a reentrant mutex.

    * @ReadWriteLock@: Multiple-reader, single-writer locks. Used to
    protect shared resources which may be concurrently read, but only
    sequentially written.

    * @ReadWriteVar@: Concurrent read, sequential write variables.

    Please consult the API documentation of the individual modules for
    more detailed information.

    This package was inspired by the concurrency libraries of Java and
    Python.

category:             Concurrency
abi:                  3d6a29ae9aaee12978c43083d6745c16
exposed:              True
exposed-modules:
    Control.Concurrent.Broadcast Control.Concurrent.Event
    Control.Concurrent.Lock Control.Concurrent.RLock
    Control.Concurrent.ReadWriteLock Control.Concurrent.ReadWriteVar
    Control.Concurrent.STM.Lock

hidden-modules:       Utils
import-dirs:
    /app/.cabal/store/ghc-8.10.7/concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050/lib

library-dirs:
    /app/.cabal/store/ghc-8.10.7/concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050/lib

dynamic-library-dirs:
    /app/.cabal/store/ghc-8.10.7/concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050/lib

data-dir:
    /app/.cabal/store/ghc-8.10.7/concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050/share

hs-libraries:
    HSconcurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050

depends:
    base-4.14.3.0 stm-2.5.0.1
    unbounded-delays-0.1.1.1-e543cc3e640d3873f838dea4898c78b71ff5c8fa399ebfb6597673d9bdf6395f

haddock-interfaces:
    /app/.cabal/store/ghc-8.10.7/concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050/share/doc/html/concurrent-extra.haddock

haddock-html:
    /app/.cabal/store/ghc-8.10.7/concurrent-extra-0.7.0.12-e5b2630c9a979b9c9300d2236dada21ff7235dd76fafcd8284fd4406f3739050/share/doc/html
