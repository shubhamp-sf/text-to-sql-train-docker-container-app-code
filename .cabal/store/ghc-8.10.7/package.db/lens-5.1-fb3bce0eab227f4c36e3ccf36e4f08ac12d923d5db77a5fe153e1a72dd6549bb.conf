name:                 lens
version:              5.1
visibility:           public
id:
    lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb

key:
    lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb

license:              BSD-2-Clause
copyright:            Copyright (C) 2012-2016 Edward A. Kmett
maintainer:           Edward A. Kmett <ekmett@gmail.com>
author:               Edward A. Kmett
stability:            provisional
homepage:             http://github.com/ekmett/lens/
synopsis:             Lenses, Folds and Traversals
description:
    This package comes \"Batteries Included\" with many useful lenses for the types
    commonly used from the Haskell Platform, and with tools for automatically
    generating lenses and isomorphisms for user-supplied data types.

    The combinators in @Control.Lens@ provide a highly generic toolbox for composing
    families of getters, folds, isomorphisms, traversals, setters and lenses and their
    indexed variants.

    An overview, with a large number of examples can be found in the <https://github.com/ekmett/lens#lens-lenses-folds-and-traversals README>.

    An introductory video on the style of code used in this library by Simon Peyton Jones is available from <http://skillsmatter.com/podcast/scala/lenses-compositional-data-access-and-manipulation Skills Matter>.

    A video on how to use lenses and how they are constructed is available on <http://youtu.be/cefnmjtAolY?hd=1 youtube>.

    Slides for that second talk can be obtained from <http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf comonad.com>.

    More information on the care and feeding of lenses, including a brief tutorial and motivation
    for their types can be found on the <https://github.com/ekmett/lens/wiki lens wiki>.

    A small game of @pong@ and other more complex examples that manage their state using lenses can be found in the <https://github.com/ekmett/lens/blob/master/examples/ example folder>.

    /Lenses, Folds and Traversals/

    With some signatures simplified, the core of the hierarchy of lens-like constructions looks like:


    <<http://i.imgur.com/ALlbPRa.png>>

    <images/Hierarchy.png (Local Copy)>

    You can compose any two elements of the hierarchy above using @(.)@ from the @Prelude@, and you can
    use any element of the hierarchy as any type it linked to above it.

    The result is their lowest upper bound in the hierarchy (or an error if that bound doesn't exist).

    For instance:

    * You can use any 'Traversal' as a 'Fold' or as a 'Setter'.

    * The composition of a 'Traversal' and a 'Getter' yields a 'Fold'.

    /Minimizing Dependencies/

    If you want to provide lenses and traversals for your own types in your own libraries, then you
    can do so without incurring a dependency on this (or any other) lens package at all.

    /e.g./ for a data type:

    > data Foo a = Foo Int Int a

    You can define lenses such as

    > -- bar :: Lens' (Foo a) Int
    > bar :: Functor f => (Int -> f Int) -> Foo a -> f (Foo a)
    > bar f (Foo a b c) = fmap (\a' -> Foo a' b c) (f a)

    > -- quux :: Lens (Foo a) (Foo b) a b
    > quux :: Functor f => (a -> f b) -> Foo a -> f (Foo b)
    > quux f (Foo a b c) = fmap (Foo a b) (f c)

    without the need to use any type that isn't already defined in the @Prelude@.

    And you can define a traversal of multiple fields with 'Control.Applicative.Applicative':

    > -- traverseBarAndBaz :: Traversal' (Foo a) Int
    > traverseBarAndBaz :: Applicative f => (Int -> f Int) -> Foo a -> f (Foo a)
    > traverseBarAndBaz f (Foo a b c) = Foo <$> f a <*> f b <*> pure c

    What is provided in this library is a number of stock lenses and traversals for
    common haskell types, a wide array of combinators for working them, and more
    exotic functionality, (/e.g./ getters, setters, indexed folds, isomorphisms).

category:             Data, Lenses, Generics
abi:                  5339adab7fabf3480aa1888acfdf9c2c
exposed:              True
exposed-modules:
    Control.Exception.Lens Control.Lens Control.Lens.At
    Control.Lens.Combinators Control.Lens.Cons Control.Lens.Each
    Control.Lens.Empty Control.Lens.Equality Control.Lens.Extras
    Control.Lens.Fold Control.Lens.Getter Control.Lens.Indexed
    Control.Lens.Internal Control.Lens.Internal.Bazaar
    Control.Lens.Internal.ByteString Control.Lens.Internal.CTypes
    Control.Lens.Internal.Context Control.Lens.Internal.Deque
    Control.Lens.Internal.Exception Control.Lens.Internal.FieldTH
    Control.Lens.Internal.Fold Control.Lens.Internal.Getter
    Control.Lens.Internal.Indexed Control.Lens.Internal.Instances
    Control.Lens.Internal.Iso Control.Lens.Internal.Level
    Control.Lens.Internal.List Control.Lens.Internal.Magma
    Control.Lens.Internal.Prism Control.Lens.Internal.PrismTH
    Control.Lens.Internal.Profunctor Control.Lens.Internal.Review
    Control.Lens.Internal.Setter Control.Lens.Internal.TH
    Control.Lens.Internal.Zoom Control.Lens.Iso Control.Lens.Lens
    Control.Lens.Level Control.Lens.Operators Control.Lens.Plated
    Control.Lens.Prism Control.Lens.Profunctor Control.Lens.Reified
    Control.Lens.Review Control.Lens.Setter Control.Lens.TH
    Control.Lens.Traversal Control.Lens.Tuple Control.Lens.Type
    Control.Lens.Unsound Control.Lens.Wrapped Control.Lens.Zoom
    Control.Monad.Error.Lens Control.Parallel.Strategies.Lens
    Control.Seq.Lens Data.Array.Lens Data.Bits.Lens
    Data.ByteString.Lazy.Lens Data.ByteString.Lens
    Data.ByteString.Strict.Lens Data.Complex.Lens Data.Data.Lens
    Data.Dynamic.Lens Data.HashSet.Lens Data.IntSet.Lens Data.List.Lens
    Data.Map.Lens Data.Sequence.Lens Data.Set.Lens Data.Text.Lazy.Lens
    Data.Text.Lens Data.Text.Strict.Lens Data.Tree.Lens
    Data.Typeable.Lens Data.Vector.Generic.Lens Data.Vector.Lens
    GHC.Generics.Lens Language.Haskell.TH.Lens Numeric.Lens
    Numeric.Natural.Lens System.Exit.Lens System.FilePath.Lens
    System.IO.Error.Lens

hidden-modules:       Control.Lens.Internal.Prelude
import-dirs:
    /app/.cabal/store/ghc-8.10.7/lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb/lib

library-dirs:
    /app/.cabal/store/ghc-8.10.7/lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb/lib

dynamic-library-dirs:
    /app/.cabal/store/ghc-8.10.7/lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb/lib

data-dir:
    /app/.cabal/store/ghc-8.10.7/lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb/share

hs-libraries:
    HSlens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb

depends:
    array-0.5.4.0
    assoc-1.0.2-8a048910d9d2d867c150687af2c919aae879996f19c1aee07f4590a356284eaf
    base-4.14.3.0
    base-orphans-0.8.6-fbd06cc0f1e87751970cf003b25e5b10dcf4c218931f51ed808354965075c26c
    bifunctors-5.5.11-2d26f458718c1d11fb8e2ee0a8bdd670b9e353ca50ccf288e3f090429780f6fd
    bytestring-0.10.12.0
    call-stack-0.4.0-f84e001ba80527eccce19e6c5209b2b571524124582a7dc9a75351a9f9fb9678
    comonad-5.0.8-2a7fa53397c686ac1860a5e382d726324dfd8538a2a95134e6167215836f5970
    containers-0.6.5.1
    contravariant-1.5.5-db83032095a68ebc42d39746dd4e19e4f6e37c7873237a6584c0b6157e6b8461
    distributive-0.6.2.1-d1ba776802281b54a72e0c6d43389d1599e577e9cb3422483af6a691ec80da14
    exceptions-0.10.4 filepath-1.4.2.1
    free-5.1.7-bf666075047bc4b38503dbc05ce454492f5c72c8f3f9c4db58932683564237b3
    ghc-prim-0.6.1
    hashable-1.3.5.0-38ac512a8fca7331205e4a466b18225a1140d2f7309381fd440283069fc8b154
    indexed-traversable-0.1.2-84d6c7f80dd2b1558c6378cef15cefa0dd20fc82c17c29394f2b2e14d91088e3
    indexed-traversable-instances-0.1.1-226aa1eba1e373436f14b8b3a917a7238130926e1d8e71fc796f3319118ecb56
    kan-extensions-5.2.3-f2ed6f02a47e043feec589963671fc9c4c3dc51f9234bd5b6c950bce313f71d3
    mtl-2.2.2
    parallel-3.2.2.0-585417371265cf7c20c369af6018b559ceeb532161885c7cc2b78d71af0edf11
    profunctors-5.6.2-c31b913d0476333a9fde0fab0c8e1b7c40f039de042028e77d7b4ef35efaaaa3
    reflection-2.1.6-a15054ca53fb3a506d797978d5ae01a03f34befcb2a76a45f6efa92e14771fe9
    semigroupoids-5.3.7-a1a090ffa457f3fca01a381a444812a5cad28cb26b13386f2925a31cdedaf58f
    strict-0.4.0.1-e03edc99ad79f28b96098b2176ef73a633776e405630ff637a212baa04deb2fb
    tagged-0.8.6.1-2eea1558b46bda8b2e8ad3636e69c3043df0ac87651423c57c39822bf07aaea7
    template-haskell-2.16.0.0 text-1.2.4.1
    th-abstraction-0.4.3.0-b7f6ac0b3f48998b0e8738f043129295710e391dea80bb0064fc51a0f8c42b89
    these-1.1.1.1-01fea4a79f45c61fecb476e83c89be144b2d3fd5307b851a816c11350e86d357
    transformers-0.5.6.2
    transformers-compat-0.7.1-ca45d466718214d71f167e7f61b2c3944d59bf161473172b8c705c11dcdfbb58
    unordered-containers-0.2.17.0-c843f201d9e95322b0f5c56bbdc549d5f7ed994ddecf3b8bc60b6d00bcbc4387
    vector-0.12.2.0-f6f8c8faee7399948b218d2d4767d919e8f14d952fc1505d0d6824b8766120bd

haddock-interfaces:
    /app/.cabal/store/ghc-8.10.7/lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb/share/doc/html/lens.haddock

haddock-html:
    /app/.cabal/store/ghc-8.10.7/lens-5.1-fb3bce0eab227f4c36e3ccf36e4f08ac12d923d5db77a5fe153e1a72dd6549bb/share/doc/html
